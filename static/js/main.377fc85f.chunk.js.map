{"version":3,"sources":["components/screens/HomeCard/index.jsx","components/screens/HomeForm/index.jsx","components/screens/Home/index.jsx","components/screens/CounterCard/index.jsx","components/screens/Counter/index.jsx","components/App.js","helpers/serviceWorker.js","index.js"],"names":["HomeCard","props","className","name","year","onClick","changeEdit","HomeForm","state","type","placeholder","onChange","this","setValues","defaultValue","React","Component","Home","buttonName1","buttonName2","edit","to","CounterCard","e","create","update","minusNumberCard","bind","id","number","sumNumberCard","deleteCard","Counter","addCard","card","map","key","App","setState","idCard","newCard","Date","filter","target","value","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0dAYeA,G,YATE,SAACC,GAAD,OACf,oCACA,yBAAKC,UAAU,YACX,wCAAcD,EAAME,MACpB,wCAAWF,EAAMG,MACjB,4BAAQF,UAAU,SAASG,QAASJ,EAAMK,YAA1C,0BCUSC,G,wDAdb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CAACL,KAAM,GAAIC,KAAM,IAFb,E,qDAKjB,OACE,yBAAKF,UAAU,YACb,2BAAOO,KAAK,OAAON,KAAK,OAAOO,YAAY,GAAGC,SAAUC,KAAKX,MAAMY,UAAWC,aAAcF,KAAKX,MAAME,OACvG,2BAAOM,KAAK,OAAON,KAAK,OAAOO,YAAY,GAAGC,SAAUC,KAAKX,MAAMY,UAAWC,aAAcF,KAAKX,MAAMG,OACvG,4BAAQF,UAAU,SAASG,QAASO,KAAKX,MAAMK,YAA/C,4B,GAVeS,IAAMC,YCiCdC,E,kDA7Bb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CAACU,YAAa,UAAWC,YAAa,oBAFlC,E,qDAMjB,OACE,yBAAKjB,UAAU,QACb,wBAAIA,UAAU,WAAd,WACqB,IAApBU,KAAKX,MAAMmB,KACZ,kBAAC,EAAD,CACEjB,KAAQS,KAAKX,MAAME,KACnBC,KAAQQ,KAAKX,MAAMG,KACnBE,WAAYM,KAAKX,MAAMK,WACvBO,UAAWD,KAAKX,MAAMY,YAExB,kBAAC,EAAD,CACEV,KAAQS,KAAKX,MAAME,KACnBC,KAAQQ,KAAKX,MAAMG,KACnBE,WAAYM,KAAKX,MAAMK,WACvBO,UAAWD,KAAKX,MAAMY,YAExB,kBAAC,IAAD,CAAMQ,GAAK,YACT,4BAAQnB,UAAU,gBAAlB,6B,GAxBSa,IAAMC,WCkBVM,G,8DApBb,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,GAFI,E,qDAIV,IACAe,EAAKX,KAAKX,MAAVsB,EACP,OACE,yBAAKrB,UAAU,eACb,4CAAkBqB,EAAEpB,MACpB,wCAAcoB,EAAEC,QAChB,6CAAmBD,EAAEE,QACrB,yBAAKvB,UAAU,kBACb,4BAAQA,UAAU,aAAaG,QAASO,KAAKX,MAAMyB,gBAAgBC,KAAKf,KAAMW,EAAEK,KAAhF,KAAgGL,EAAEM,OAClG,4BAAQ3B,UAAU,aAAaG,QAASO,KAAKX,MAAM6B,cAAcH,KAAKf,KAAMW,EAAEK,KAA9E,KACA,4BAAQ1B,UAAU,aAAaG,QAAUO,KAAKX,MAAM8B,WAAWJ,KAAKf,KAAMW,EAAEK,KAA5E,kB,GAfgBb,IAAMC,YC4BjBgB,E,kDAzBb,WAAY/B,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,GAFI,E,qDAIV,IAAD,OACN,OACE,yBAAKN,UAAU,WACb,mDACA,kBAAC,IAAD,CAAMmB,GAAK,SACT,4BAAQnB,UAAU,UAAlB,WAEF,4BAAQA,UAAU,SAASG,QAASO,KAAKX,MAAMgC,SAA/C,sBACCrB,KAAKX,MAAMiC,KAAKC,KAAI,SAAAZ,GAAC,OACpB,kBAAC,EAAD,CACEA,EAAGA,EACHa,IAAKb,EAAEK,GACPG,WAAY,EAAK9B,MAAM8B,WACvBD,cAAe,EAAK7B,MAAM6B,cAC1BJ,gBAAiB,EAAKzB,MAAMyB,0B,GAnBlBX,IAAMC,WCoFbqB,E,kDAjFb,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IAGRgC,QAAU,WACR,EAAKK,SAAS,CAACC,OAAQ,EAAK/B,MAAM+B,OAAS,IAC3C,IAAMC,EAAU,CACdZ,GAAI,EAAKpB,MAAM+B,OACfpC,KAAM,EAAKK,MAAML,KACjBqB,OAAQiB,OACRhB,OAAQgB,OACRZ,OAAQ,GAEV,EAAKS,SAAS,CACZJ,KAAK,GAAD,mBAAM,EAAK1B,MAAM0B,MAAjB,CAAuBM,OAdZ,EAiBnBT,WAAa,SAACH,GACZ,IAAMY,EAAU,EAAKhC,MAAM0B,KAAKQ,QAAO,SAAAR,GAAI,OAAIA,EAAKN,KAAOA,KAC3D,EAAKU,SAAS,CAACJ,KAAMM,KAnBJ,EAqBnBV,cAAgB,SAACF,GACf,IAAMY,EAAU,EAAKhC,MAAM0B,KAAKC,KAAI,SAAAD,GAKlC,OAJIA,EAAKN,KAAOA,IACdM,EAAKL,SACLK,EAAKT,OAASgB,QAETP,KAET,EAAKI,SAAS,CAACJ,KAAMM,KA7BJ,EA+BnBd,gBAAkB,SAACE,GACjB,IAAMY,EAAU,EAAKhC,MAAM0B,KAAKC,KAAI,SAAAD,GAKlC,OAJIA,EAAKN,KAAOA,IACdM,EAAKL,SACLK,EAAKT,OAASgB,QAETP,KAET,EAAKI,SAAS,CAACJ,KAAMM,KAvCJ,EAyCnBlC,WAAY,WACV,EAAKgC,SAAS,CACZnC,KAAM,EAAKK,MAAML,KACjBC,KAAM,EAAKI,MAAMJ,KACjBgB,MAAM,EAAKZ,MAAMY,QA7CF,EAgDnBP,UAAY,SAACU,GACX,EAAKe,SAAL,eACGf,EAAEoB,OAAOxC,KAAOoB,EAAEoB,OAAOC,SAhD5B,EAAKpC,MAAQ,CAACL,KAAM,SAAUC,KAAM,KAAMmC,OAAQ,EAAGL,KAAM,GAAId,MAAM,GAFpD,E,qDAsDjB,OACE,kBAAC,IAAD,KACE,yBAAKlB,UAAW,WACd,kBAAC,IAAD,CAAUmB,GAAG,UACb,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,SAChB,kBAAC,EAAD,CACE3C,KAAMS,KAAKJ,MAAML,KACjBC,KAAMQ,KAAKJ,MAAMJ,KACjBgB,KAAMR,KAAKJ,MAAMY,KACjBd,WAAYM,KAAKN,WACjBO,UAAWD,KAAKC,aAGpB,kBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,YAChB,kBAAC,EAAD,CACEZ,KAAQtB,KAAKJ,MAAM0B,KACnBD,QAASrB,KAAKqB,QACdF,WAAYnB,KAAKmB,WACjBD,cAAelB,KAAKkB,cACpBJ,gBAAiBd,KAAKc,yB,GA1ElBX,IAAMC,WCKJ+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.377fc85f.chunk.js","sourcesContent":["import './style.css';\r\nimport React from 'react';\r\n\r\nconst HomeCard = (props) => (\r\n  <>\r\n  <div className=\"homeCard\">\r\n      <div>Nombre: {props.name}</div>\r\n      <div>Año: {props.year}</div>\r\n      <button className=\"button\" onClick={props.changeEdit}>editar informacion</button>\r\n  </div>\r\n  </>\r\n)\r\nexport default HomeCard;","import './style.css';\r\nimport React from 'react';\r\n\r\nclass HomeForm extends React.Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {name: \"\", year: \"\"}\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"homeForm\">\r\n        <input type=\"text\" name=\"name\" placeholder=\"\" onChange={this.props.setValues} defaultValue={this.props.name}/> \r\n        <input type=\"text\" name=\"year\" placeholder=\"\" onChange={this.props.setValues} defaultValue={this.props.year}/> \r\n        <button className=\"button\" onClick={this.props.changeEdit}>Guardar informacion</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default HomeForm;\r\n\r\n","import './style.css';\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport HomeCard from '../HomeCard';\r\nimport HomeForm from '../HomeForm';\r\n\r\nclass Home extends React.Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {buttonName1: \"Agregar\", buttonName2: \"Agregar contador\"}\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"home\">\r\n        <h1 className=\"student\">Alumno</h1>\r\n        {this.props.edit === false ?  \r\n        <HomeCard \r\n          name = {this.props.name}\r\n          year = {this.props.year}\r\n          changeEdit={this.props.changeEdit}\r\n          setValues={this.props.setValues}\r\n        />:\r\n        <HomeForm \r\n          name = {this.props.name}\r\n          year = {this.props.year}\r\n          changeEdit={this.props.changeEdit}\r\n          setValues={this.props.setValues}\r\n        />}\r\n        <Link to = \"/counter\">\r\n          <button className=\"button green\">Lista de contadores</button>\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Home;\r\n\r\n","import './style.css';\r\nimport React from 'react';\r\n\r\nclass CounterCard extends React.Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n  render(){\r\n    const {e} = this.props;\r\n    return (\r\n      <div className=\"counterCard\">\r\n        <div>Creado por: {e.name}</div>\r\n        <div>Creado: {e.create}</div>\r\n        <div>Actualizado: {e.update}</div>\r\n        <div className=\"grupButtonCard\">\r\n          <button className=\"buttonCard\" onClick={this.props.minusNumberCard.bind(this, e.id)}>-</button>{e.number}\r\n          <button className=\"buttonCard\" onClick={this.props.sumNumberCard.bind(this, e.id)}>+</button>\r\n          <button className=\"buttonCard\" onClick= {this.props.deleteCard.bind(this, e.id)}>Eliminar</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default CounterCard;","import './style.css';\r\nimport React from 'react';\r\nimport CounterCard from '../CounterCard';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Counter extends React.Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"counter\">\r\n        <h1>Lista de contadores</h1>\r\n        <Link to = \"/home\">\r\n          <button className=\"button\">Volver</button>\r\n        </Link>\r\n        <button className=\"button\" onClick={this.props.addCard}>Añadir contador</button>\r\n        {this.props.card.map(e => \r\n          <CounterCard \r\n            e={e} \r\n            key={e.id} \r\n            deleteCard={this.props.deleteCard} \r\n            sumNumberCard={this.props.sumNumberCard}\r\n            minusNumberCard={this.props.minusNumberCard}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Counter;","import './reset.css';\nimport './App.css';\nimport React from 'react';\nimport { BrowserRouter, Redirect, Route } from 'react-router-dom';\nimport Home from './screens/Home';\nimport Counter from './screens/Counter';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props)\n    this.state = {name: \"Lihuel\", year: 1996, idCard: 0, card: [], edit: false }\n  }\n  addCard = () => {\n    this.setState({idCard: this.state.idCard + 1})\n    const newCard = {\n      id: this.state.idCard,\n      name: this.state.name,\n      create: Date(),\n      update: Date(),\n      number: 0\n    }\n    this.setState({\n      card: [...this.state.card, newCard]\n    })\n  }\n  deleteCard = (id) => {\n    const newCard = this.state.card.filter(card => card.id !== id);\n    this.setState({card: newCard})\n  }\n  sumNumberCard = (id) => {\n    const newCard = this.state.card.map(card => {\n      if (card.id === id){\n        card.number ++;\n        card.update = Date();\n      }\n      return card;\n    });\n    this.setState({card: newCard})\n  }\n  minusNumberCard = (id) => {\n    const newCard = this.state.card.map(card => {\n      if (card.id === id){\n        card.number --;\n        card.update = Date();\n      }\n      return card;\n    });\n    this.setState({card: newCard})\n  }\n  changeEdit =() =>{\n    this.setState({\n      name: this.state.name,\n      year: this.state.year,\n      edit: this.state.edit ? false : true\n    }) \n  }\n  setValues = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  render(){\n    return (\n      <BrowserRouter>\n        <div className= \"wrapper\">\n          <Redirect to=\"/home\"/>\n          <Route exact path=\"/home\">\n            <Home \n              name={this.state.name}\n              year={this.state.year}\n              edit={this.state.edit}\n              changeEdit={this.changeEdit}\n              setValues={this.setValues}\n            />\n          </Route>\n          <Route exact path=\"/counter\">\n            <Counter \n              card = {this.state.card}\n              addCard={this.addCard}\n              deleteCard={this.deleteCard}\n              sumNumberCard={this.sumNumberCard}\n              minusNumberCard={this.minusNumberCard}\n            />\n          </Route>\n        </div>      \n      </BrowserRouter>\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './helpers/serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}